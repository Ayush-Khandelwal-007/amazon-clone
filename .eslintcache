[{"/Users/ayush/Documents/projects/amazon-clone/src/components/HomeComponents/Product.jsx":"1","/Users/ayush/Documents/projects/amazon-clone/src/App.jsx":"2","/Users/ayush/Documents/projects/amazon-clone/src/components/CheckoutComponents/Subtotal.jsx":"3","/Users/ayush/Documents/projects/amazon-clone/src/components/CheckoutComponents/BasketContent.jsx":"4","/Users/ayush/Documents/projects/amazon-clone/src/components/Header.jsx":"5","/Users/ayush/Documents/projects/amazon-clone/src/components/HeaderComponents/HeaderNav.jsx":"6","/Users/ayush/Documents/projects/amazon-clone/src/index.jsx":"7","/Users/ayush/Documents/projects/amazon-clone/src/contexts/Basket.jsx":"8","/Users/ayush/Documents/projects/amazon-clone/src/contexts/reducer.jsx":"9","/Users/ayush/Documents/projects/amazon-clone/src/components/CheckoutComponents/BasketItem.jsx":"10","/Users/ayush/Documents/projects/amazon-clone/src/components/FormsComponents/GoogleLogin.jsx":"11","/Users/ayush/Documents/projects/amazon-clone/src/components/HeaderComponents/HeaderSearch.jsx":"12","/Users/ayush/Documents/projects/amazon-clone/src/reportWebVitals.js":"13","/Users/ayush/Documents/projects/amazon-clone/src/Firebase.jsx":"14","/Users/ayush/Documents/projects/amazon-clone/src/pages/SignUp.jsx":"15","/Users/ayush/Documents/projects/amazon-clone/src/pages/Home.jsx":"16","/Users/ayush/Documents/projects/amazon-clone/src/pages/Payment.jsx":"17","/Users/ayush/Documents/projects/amazon-clone/src/pages/SignIn.jsx":"18","/Users/ayush/Documents/projects/amazon-clone/src/components/PaymentComponents/axios.jsx":"19","/Users/ayush/Documents/projects/amazon-clone/src/pages/Orders.jsx":"20","/Users/ayush/Documents/projects/amazon-clone/src/components/OrdersComponents/Order.jsx":"21","/Users/ayush/Documents/projects/amazon-clone/src/pages/Checkout.jsx":"22"},{"size":1932,"mtime":1608286716338,"results":"23","hashOfConfig":"24"},{"size":2916,"mtime":1608412976324,"results":"25","hashOfConfig":"24"},{"size":1076,"mtime":1608358400368,"results":"26","hashOfConfig":"24"},{"size":1021,"mtime":1608266228594,"results":"27","hashOfConfig":"24"},{"size":666,"mtime":1608072459939,"results":"28","hashOfConfig":"24"},{"size":2547,"mtime":1608410407601,"results":"29","hashOfConfig":"24"},{"size":663,"mtime":1608283468446,"results":"30","hashOfConfig":"24"},{"size":359,"mtime":1608236054144,"results":"31","hashOfConfig":"24"},{"size":2485,"mtime":1608405164371,"results":"32","hashOfConfig":"24"},{"size":2109,"mtime":1608363924005,"results":"33","hashOfConfig":"24"},{"size":1015,"mtime":1608283618762,"results":"34","hashOfConfig":"24"},{"size":350,"mtime":1607897816265,"results":"35","hashOfConfig":"24"},{"size":362,"mtime":1607663864833,"results":"36","hashOfConfig":"24"},{"size":551,"mtime":1608413299736,"results":"37","hashOfConfig":"24"},{"size":2641,"mtime":1608358640124,"results":"38","hashOfConfig":"24"},{"size":10971,"mtime":1608358742577,"results":"39","hashOfConfig":"24"},{"size":7292,"mtime":1608412775970,"results":"40","hashOfConfig":"24"},{"size":1842,"mtime":1608358631307,"results":"41","hashOfConfig":"24"},{"size":106,"mtime":1608399779653,"results":"42","hashOfConfig":"24"},{"size":1113,"mtime":1608410275323,"results":"43","hashOfConfig":"24"},{"size":1747,"mtime":1608411258323,"results":"44","hashOfConfig":"24"},{"size":671,"mtime":1608358612090,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"60gkbf",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/ayush/Documents/projects/amazon-clone/src/components/HomeComponents/Product.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/App.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/components/CheckoutComponents/Subtotal.jsx",[],["94","95"],"/Users/ayush/Documents/projects/amazon-clone/src/components/CheckoutComponents/BasketContent.jsx",[],["96","97"],"/Users/ayush/Documents/projects/amazon-clone/src/components/Header.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/components/HeaderComponents/HeaderNav.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/index.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/contexts/Basket.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/contexts/reducer.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/components/CheckoutComponents/BasketItem.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/components/FormsComponents/GoogleLogin.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/components/HeaderComponents/HeaderSearch.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/reportWebVitals.js",[],["98","99"],"/Users/ayush/Documents/projects/amazon-clone/src/Firebase.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/pages/SignUp.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/pages/Home.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/pages/Payment.jsx",["100"],"import { Input } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react'\nimport { useBasket } from '../contexts/Basket';\nimport '../components/PaymentComponents/Payment.css'\nimport BasketItem from '../components/CheckoutComponents/BasketItem';\nimport { getBasketTotal, getBasketTotalQuantity } from '../contexts/reducer';\nimport { Link, useHistory } from 'react-router-dom';\n// eslint-disable-next-line\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\n// import axios from '../components/PaymentComponents/axios';\nimport { db } from '../Firebase';\n\nfunction Payment() {\n\n    const [{ basket, user }, dispatch] = useBasket();\n\n    // const stripe = useStripe();\n    // const elements = useElements();\n\n    const history = useHistory();\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n\n    // const [clientSecret, setClientSecret] = useState(true);\n\n    // useEffect(() => {\n\n    //     const getClientSecret = async () => {\n    //         const response = await axios({\n    //             method: 'post',\n    //             url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n    //         });\n    //         setClientSecret(response.data.clientSecret)\n    //     }\n\n    //     getClientSecret();\n    // }, [basket])\n\n    const submitFunction = async (e) => {\n        e.preventDefault();\n        setProcessing(true);\n\n        // const payload = await stripe.confirmCardPayment(clientSecret, {\n        //     payment_method: elements.getElement(CardElement)\n        // }).then(({ paymentIntent }) => {\n\n        //     db\n        //       .collection('users')\n        //       .doc(user?.uid)\n        //       .collection('orders')\n        //       .doc(paymentIntent.id)\n        //       .set({\n        //           basket: basket,\n        //           amount: paymentIntent.amount,\n        //           created: paymentIntent.created\n        //       })\n\n        //     setSucceeded(true);\n        //     setError(null)\n        //     setProcessing(false)\n\n        //     dispatch({\n        //         type: 'EMPTY_BASKET'\n        //     })\n\n        //     history.replace('/orders')\n        // })\n        db\n            .collection('users')\n            .doc(user?.uid)\n            .collection('orders')\n            .add({\n                basket: basket,\n                // amount: paymentIntent.amount,\n                amount:getBasketTotal(basket)*100,\n                // created: paymentIntent.created\n                created:true,\n            })\n        setSucceeded(true);\n        setError(null)\n        setProcessing(false)\n\n        dispatch({\n            type: 'EMPTY_BASKET'\n        })\n\n        history.replace('/orders')\n    }\n\n    const handleChange = (e) => {\n        setDisabled(e.empty);\n        setError(e.error ? e.error.message : \"\");\n    }\n\n    const [house, setHouse] = useState('');\n    const [city, setCity] = useState('');\n\n    return (\n        <div className=\"payment\">\n            <h1>CheckOut(<Link to=\"/checkout\">{getBasketTotalQuantity(basket)} items</Link>)</h1>\n            <div className=\"payment_container\">\n                <div className=\"payment_section\">\n                    <div className=\"payment_title\">\n                        <h4>Delivery Address</h4>\n                    </div>\n                    <div className=\"payment_address\">\n                        <div>\n                            <p><strong>Email: </strong>{user?.email}</p>\n                            <p><strong>House/Flat number,locality: </strong>{house}</p>\n                            <p><strong>City,State: </strong>{city}</p>\n                        </div>\n                        <div className=\"input_address\">\n                            <Input\n                                className='input_field'\n                                type=\"text\"\n                                placeholder=\"House/Flat number,locality\"\n                                value={house}\n                                onChange={e => setHouse(e.target.value)}\n                            />\n                            <Input\n                                className='input_field'\n                                type=\"text\"\n                                placeholder=\"City,State\"\n                                value={city}\n                                onChange={e => setCity(e.target.value)}\n                            />\n                        </div>\n                    </div>\n\n                </div>\n                <hr></hr>\n                <div className=\"payment_section\">\n                    <div className=\"payment_title\">\n                        <h4>Review Items and delivery</h4>\n                    </div>\n                    <div className=\"payment_items\">\n                        {\n                            basket?.map((item) => {\n                                return (\n                                    <div key={item.id}>\n                                        <BasketItem\n                                            id={item.id}\n                                            title={item.title}\n                                            imageurl={item.imageurl}\n                                            price={item.price}\n                                            rating={item.rating}\n                                            quantity={item.quantity}\n                                        />\n                                        <hr></hr>\n                                    </div>\n                                )\n                            })\n                        }\n                    </div>\n                </div>\n                <hr></hr>\n                <div className=\"payment_section\">\n                    <div className=\"payment_title\">\n                        <h4>Payment Methods</h4>\n                    </div>\n                    <div className=\"payment_details\">\n                        <form onSubmit={submitFunction}>\n                            <CardElement onChange={handleChange} />\n\n                            <div className=\"payment_pricecontainer\">\n                                <CurrencyFormat\n                                    renderText={(value) => (\n                                        <h3>Order Total: {value}</h3>\n                                    )}\n                                    decimalScale={2}\n                                    value={getBasketTotal(basket)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    prefix={\"₹\"}\n                                />\n                                <button disabled={processing || disabled || succeeded}>\n                                    <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                </button>\n                                {error && <div>{error}</div>}\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment\n","/Users/ayush/Documents/projects/amazon-clone/src/pages/SignIn.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/components/PaymentComponents/axios.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/pages/Orders.jsx",["101"],"/Users/ayush/Documents/projects/amazon-clone/src/components/OrdersComponents/Order.jsx",[],"/Users/ayush/Documents/projects/amazon-clone/src/pages/Checkout.jsx",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":17,"nodeType":"112","messageId":"113","endLine":2,"endColumn":26},{"ruleId":"110","severity":1,"message":"114","line":8,"column":22,"nodeType":"112","messageId":"113","endLine":8,"endColumn":30},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],["115"],["116"],["115"],["116"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]